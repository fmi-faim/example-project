[project]
name = "Example Project"
version = "0.1.0"
description = "Add a short description here"
authors = ["Tim-Oliver Buchholz <tim-oliver.buchholz@fmi.ch>"]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64", "win-64", "osx-arm64", "osx-64"]

[system-requirements]
# See https://pixi.sh/latest/features/system_requirements/#default-system-requirements

[tasks]
cache_status = "python -m faim_ipa.pixi.cache_status"
source_status = "python -m faim_ipa.pixi.src_status source"
log_commit = {cmd = 'python -m faim_ipa.pixi.log_commit $TASK', env = {TASK = ""}}
build_config = { cmd = "mkdir -p $WD ; TASK=BUILD_CONFIG pixi run log_commit ; cd $WD ; python $PIXI_PROJECT_ROOT/source/s01_segment/config.py", env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"]}
segment = { cmd = "cd $WD ; TASK=SEGMENT pixi run log_commit ; python $PIXI_PROJECT_ROOT/source/s01_segment/run.py --config acquisition_config.yaml", env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"]}
measure = { cmd = "cd $WD ; TASK=MEASURE pixi run log_commit ; python $PIXI_PROJECT_ROOT/source/s02_measure/run.py --config measure_config.yaml", env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"]}

[dependencies]
python = "3.12"
scikit-image = ">=0.24.0,<0.25"
matplotlib = ">=3.9.1,<4"
pandas = ">=2.2.2,<3"
faim-ipa = ">=0.8.0,<0.9"
rich = ">=13.9.1,<14"

[feature.docs.dependencies]
mkdocs = ">=1.6.0,<2"
mkdocs-git-committers-plugin-2 = ">=2.3.0,<3"
mkdocs-git-revision-date-localized-plugin = ">=1.2.6,<2"
mkdocs-material = ">=9.5.31,<10"
mkdocstrings = ">=0.25.2,<0.26"
mkdocstrings-python = ">=1.10.7,<2"

[feature.docs.tasks]
clean_docs = "rm -rf site"
build_docs = { cmd ="OFFLINE=TRUE mkdocs build", depends_on=["clean_docs"] }
show_docs = "mkdocs serve"

[feature.dev.dependencies]
pre-commit = ">=3.1.1,<3.8"

[feature.dev.tasks]
install_hooks = "pre-commit install"
lint = { cmd="pre-commit run --all-files", depends_on=["install_hooks"] }

[feature.nextflow]
platforms = ["linux-64", "osx-64", "osx-arm64"]

[feature.nextflow.dependencies]
nextflow = ">=24.4.4,<25"

[feature.nextflow.tasks]
nextflow = { cmd="TASK=NEXTFLOW pixi run log_commit ; cd $WD ; nextflow run $PIXI_PROJECT_ROOT/source/workflow.nf --config $(pwd)/acquisition_config.yaml", env = { WD = "runs/example", PROFILE = "standard", MAIL = ""}, depends_on = ["cache_status", "source_status"]}

[feature.jupyter.dependencies]
jupyter = ">=1.0.0,<1.1"
napari = ">=0.5.1,<0.6"
pyqt = ">=5.15.9,<6"

[feature.jupyter.tasks]
jupyter = "jupyter lab"
napari = "napari"
cp_vis = { cmd = "cp $PIXI_PROJECT_ROOT/source/s03_visualization/Visualize_Results.ipynb $WD", env = { WD = "runs/example"}, outputs=["$WD/Visualize_Results.ipynb"], depends_on=["source_status"] }
visualize = { cmd = "TASK=VISUALIZE pixi run log_commit ; cd $WD ; jupyter lab ./Visualize_Results.ipynb", env = { WD = "runs/example"}, depends_on=["cp_vis", "source_status"] }

[feature.nbdev.dependencies]
nbdev = ">=2.2.10,<2.3"

[feature.nbdev.tasks]
clean = "nbdev_clean --clear_all"

[environments]
docs = { features = ["docs"], solve-group="default" }
dev = { features = ["dev"], solve-group="default" }
jupyter = { features = ["jupyter"], solve-group="default" }
nbdev = { features = ["nbdev"], no-default-feature = true}
nextflow = { features = ["nextflow"] }
